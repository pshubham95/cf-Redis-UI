/**
 * The Predix Experience layout system uses `box-sizing: border-box;` and
 * `display: flex;` to create an extremely powerful, flexible
 * alternative to the traditional grid system. The number of `.layout__items`
 * inside of each `.layout` will flexibly resize if the viewport changes.
 * You do not need to set widths on `.layout__item[s]` for the grid to function.
 * However, if you wish, you can override default grid behavior by assigning
 * widths to layout items with the classes found in `trumps.widths`.
 */
/**
 * Begin a layout group.
 */
.layout {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  /* [1] */
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  list-style: none;
  margin: 0;
  margin-left: -1rem;
  padding: 0; }
  .layout > {
    /**
       * 1. Space columns apart.
       * 2. Full-width unless told to behave otherwise.
       * 3. Required to combine fluid widths and fixed gutters.
       */ }
    .layout > .layout__item {
      padding-left: 1rem;
      /* [1] */
      -webkit-flex: 1;
      -ms-flex: 1;
      flex: 1;
      /* [2] */
      -webkit-flex-basis: 20rem;
      -ms-flex-preferred-size: 20rem;
      flex-basis: 20rem;
      box-sizing: border-box;
      /* [3] */ }
      .layout > .layout__item:nth-last-child(-n+4):first-child,
      .layout > .layout__item:nth-last-child(-n+4):first-child ~ .layout__item {
        -webkit-flex-basis: 30rem;
        -ms-flex-preferred-size: 30rem;
        flex-basis: 30rem; }
      .layout > .layout__item:nth-last-child(-n+3):first-child,
      .layout > .layout__item:nth-last-child(-n+3):first-child ~ .layout__item {
        -webkit-flex-basis: 40rem;
        -ms-flex-preferred-size: 40rem;
        flex-basis: 40rem; }

/**
     * Layouts with tiny gutters.
     */
.layout--tiny {
  margin-left: -0.33333rem; }
  .layout--tiny > .layout__item {
    padding-left: 0.33333rem; }

/**
     * Layouts with small gutters.
     */
.layout--small {
  margin-left: -0.66667rem; }
  .layout--small > .layout__item {
    padding-left: 0.66667rem; }

/**
     * Layouts with large gutters.
     */
.layout--large {
  margin-left: -1.33333rem; }
  .layout--large > .layout__item {
    padding-left: 1.33333rem; }

/**
     * Layouts with huge gutters.
     */
.layout--huge {
  margin-left: -2rem; }
  .layout--huge > .layout__item {
    padding-left: 2rem; }

/**
     * Layouts with no gutters.
     */
.layout--flush {
  margin-left: 0; }
  .layout--flush > .layout__item {
    padding-left: 0; }

/**
     * Reversed rendered order of layout items, e.g. items 1, 2, 3, 4 in your
     * markup will display in order 4, 3, 2, 1 on your page.
     */
.layout--rev {
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse; }

/**
     * Align layout items to the vertical centers of each other.
     */
.layout--middle {
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center; }

/**
     * Align layout items to the vertical bottoms of each other.
     */
.layout--bottom {
  -webkit-align-items: flex-end;
  -ms-flex-align: end;
  align-items: flex-end; }

/**
     * Align layout items to all be the same height.
     */
.layout--full > .layout__item {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

/**
     * Make the layout items fill up from the right hand side.
     */
.layout--right {
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end; }

/**
     * Make the layout items fill up from the center outward.
     */
.layout--center {
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center; }

/**
   * Make an individual layout item fill up the height of its layout.
   */
.layout__item--full {
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  -ms-grid-row-align: stretch;
  align-self: stretch; }

/**
     * Make an individual layout item fill up from the center vertically.
     */
.layout__item--center {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  -ms-grid-row-align: center;
  align-self: center; }

/**
     * Make an individual layout item fill up from the bottom up.
     */
.layout__item--bottom {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end; }
